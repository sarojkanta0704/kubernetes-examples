---
apiVersion: v1
kind: Namespace
metadata:
  labels:
    app.kubernetes.io/instance: docker-registry
    app.kubernetes.io/name: docker-registry
  name: docker-registry
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: docker-registry
  namespace: docker-registry
  labels:
    app: docker-registry
  annotations:
    volume.beta.kubernetes.io/storage-class: "nfs-storage"
spec:
  accessModes:
    - ReadWriteMany
  resources:
    requests:
      storage: 50Gi
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: docker-registry
  namespace: docker-registry
spec:
  replicas: 1
  selector:
    matchLabels:
      app: docker-registry
  template:
    metadata:
      labels:
        app: docker-registry
    spec:
      containers:
      - name: docker-registry
        image: registry:2          
        imagePullPolicy: IfNotPresent
        ports:
        - containerPort: 5000
        volumeMounts:
        - name: docker-registry-volumes
          mountPath: /opt/registry
      volumes:
      - name: docker-registry-volumes
        persistentVolumeClaim:
          claimName: docker-registry
---
apiVersion: v1
kind: Service
metadata:
  name: docker-registry
  namespace: docker-registry
spec:
  ports:
  - name: httpport
    port: 5000
    targetPort: 5000
  selector:
    app: docker-registry
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: docker-registry
  namespace: docker-registry
  annotations:
    nginx.ingress.kubernetes.io/proxy-body-size: 1024m
spec:
  ingressClassName: nginx
  rules:
  - host: docker.amoylabs.com
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: docker-registry
            port: 
              number: 5000