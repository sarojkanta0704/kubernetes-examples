---
apiVersion: v1
kind: Namespace
metadata:
  name: docker
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: registry
  namespace: docker
  annotations:
    volume.beta.kubernetes.io/storage-class: "nfs-storage"
spec:
  accessModes:
    - ReadWriteMany
  resources:
    requests:
      storage: 50Gi
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: registry
  namespace: docker
spec:
  replicas: 1
  selector:
    matchLabels:
      app: registry
  template:
    metadata:
      labels:
        app: registry
    spec:
      securityContext:
        fsGroup: 1000
        runAsUser: 1000
      containers:
      - name: registry
        image: registry
        imagePullPolicy: IfNotPresent
        env:
          - name: REGISTRY_HTTP_ADDR
            value: ":5000"
          - name: REGISTRY_STORAGE_FILESYSTEM_ROOTDIRECTORY
            value: "/var/lib/registry"        
        ports:
        - name: http
          containerPort: 5000
        volumeMounts:
        - name: docker-registry-volumes
          mountPath: /var/lib/registry
      nodeSelector:
        kubernetes.io/os: linux
        node-role.kubernetes.io/ingress: ''
      tolerations:
        - effect: NoSchedule
          key: node-role.kubernetes.io/ingress
          value: ''
          operator: Equal
      volumes:
      - name: docker-registry-volumes
        persistentVolumeClaim:
          claimName: registry
---
apiVersion: v1
kind: Service
metadata:
  name: registry
  namespace: docker
spec:
  ports:
  - name: http
    protocol: TCP
    port: 5000
    targetPort: 5000
    nodePort: 30500
  selector:
    app: registry
  type: NodePort